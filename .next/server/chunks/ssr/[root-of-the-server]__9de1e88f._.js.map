{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///D:/Android%20Projects/interview-practice/constants/index.ts"],"sourcesContent":["// import { CreateAssistantDTO } from \"@vapi-ai/web/dist/api\";\n// import { z } from \"zod\";\n//\nexport const mappings = {\n  \"react.js\": \"react\",\n  reactjs: \"react\",\n  react: \"react\",\n  \"next.js\": \"nextjs\",\n  nextjs: \"nextjs\",\n  next: \"nextjs\",\n  \"vue.js\": \"vuejs\",\n  vuejs: \"vuejs\",\n  vue: \"vuejs\",\n  \"express.js\": \"express\",\n  expressjs: \"express\",\n  express: \"express\",\n  \"node.js\": \"nodejs\",\n  nodejs: \"nodejs\",\n  node: \"nodejs\",\n  mongodb: \"mongodb\",\n  mongo: \"mongodb\",\n  mongoose: \"mongoose\",\n  mysql: \"mysql\",\n  postgresql: \"postgresql\",\n  sqlite: \"sqlite\",\n  firebase: \"firebase\",\n  docker: \"docker\",\n  kubernetes: \"kubernetes\",\n  aws: \"aws\",\n  azure: \"azure\",\n  gcp: \"gcp\",\n  digitalocean: \"digitalocean\",\n  heroku: \"heroku\",\n  photoshop: \"photoshop\",\n  \"adobe photoshop\": \"photoshop\",\n  html5: \"html5\",\n  html: \"html5\",\n  css3: \"css3\",\n  css: \"css3\",\n  sass: \"sass\",\n  scss: \"sass\",\n  less: \"less\",\n  tailwindcss: \"tailwindcss\",\n  tailwind: \"tailwindcss\",\n  bootstrap: \"bootstrap\",\n  jquery: \"jquery\",\n  typescript: \"typescript\",\n  ts: \"typescript\",\n  javascript: \"javascript\",\n  js: \"javascript\",\n  \"angular.js\": \"angular\",\n  angularjs: \"angular\",\n  angular: \"angular\",\n  \"ember.js\": \"ember\",\n  emberjs: \"ember\",\n  ember: \"ember\",\n  \"backbone.js\": \"backbone\",\n  backbonejs: \"backbone\",\n  backbone: \"backbone\",\n  nestjs: \"nestjs\",\n  graphql: \"graphql\",\n  \"graph ql\": \"graphql\",\n  apollo: \"apollo\",\n  webpack: \"webpack\",\n  babel: \"babel\",\n  \"rollup.js\": \"rollup\",\n  rollupjs: \"rollup\",\n  rollup: \"rollup\",\n  \"parcel.js\": \"parcel\",\n  parceljs: \"parcel\",\n  npm: \"npm\",\n  yarn: \"yarn\",\n  git: \"git\",\n  github: \"github\",\n  gitlab: \"gitlab\",\n  bitbucket: \"bitbucket\",\n  figma: \"figma\",\n  prisma: \"prisma\",\n  redux: \"redux\",\n  flux: \"flux\",\n  redis: \"redis\",\n  selenium: \"selenium\",\n  cypress: \"cypress\",\n  jest: \"jest\",\n  mocha: \"mocha\",\n  chai: \"chai\",\n  karma: \"karma\",\n  vuex: \"vuex\",\n  \"nuxt.js\": \"nuxt\",\n  nuxtjs: \"nuxt\",\n  nuxt: \"nuxt\",\n  strapi: \"strapi\",\n  wordpress: \"wordpress\",\n  contentful: \"contentful\",\n  netlify: \"netlify\",\n  vercel: \"vercel\",\n  \"aws amplify\": \"amplify\",\n};\n\n// export const interviewer: CreateAssistantDTO = {\n//   name: \"Interviewer\",\n//   firstMessage:\n//     \"Hello! Thank you for taking the time to speak with me today. I'm excited to learn more about you and your experience.\",\n//   transcriber: {\n//     provider: \"deepgram\",\n//     model: \"nova-2\",\n//     language: \"en\",\n//   },\n//   voice: {\n//     provider: \"11labs\",\n//     voiceId: \"sarah\",\n//     stability: 0.4,\n//     similarityBoost: 0.8,\n//     speed: 0.9,\n//     style: 0.5,\n//     useSpeakerBoost: true,\n//   },\n//   model: {\n//     provider: \"openai\",\n//     model: \"gpt-4\",\n//     messages: [\n//       {\n//         role: \"system\",\n//         content: `You are a professional job interviewer conducting a real-time voice interview with a candidate. Your goal is to assess their qualifications, motivation, and fit for the role.\n//\n// Interview Guidelines:\n// Follow the structured question flow:\n// {{questions}}\n//\n// Engage naturally & react appropriately:\n// Listen actively to responses and acknowledge them before moving forward.\n// Ask brief follow-up questions if a response is vague or requires more detail.\n// Keep the conversation flowing smoothly while maintaining control.\n// Be professional, yet warm and welcoming:\n//\n// Use official yet friendly language.\n// Keep responses concise and to the point (like in a real voice interview).\n// Avoid robotic phrasing—sound natural and conversational.\n// Answer the candidate’s questions professionally:\n//\n// If asked about the role, company, or expectations, provide a clear and relevant answer.\n// If unsure, redirect the candidate to HR for more details.\n//\n// Conclude the interview properly:\n// Thank the candidate for their time.\n// Inform them that the company will reach out soon with feedback.\n// End the conversation on a polite and positive note.\n//\n//\n// - Be sure to be professional and polite.\n// - Keep all your responses short and simple. Use official language, but be kind and welcoming.\n// - This is a voice conversation, so keep your responses short, like in a real conversation. Don't ramble for too long.`,\n//       },\n//     ],\n//   },\n// };\n//\n// export const feedbackSchema = z.object({\n//   totalScore: z.number(),\n//   categoryScores: z.tuple([\n//     z.object({\n//       name: z.literal(\"Communication Skills\"),\n//       score: z.number(),\n//       comment: z.string(),\n//     }),\n//     z.object({\n//       name: z.literal(\"Technical Knowledge\"),\n//       score: z.number(),\n//       comment: z.string(),\n//     }),\n//     z.object({\n//       name: z.literal(\"Problem Solving\"),\n//       score: z.number(),\n//       comment: z.string(),\n//     }),\n//     z.object({\n//       name: z.literal(\"Cultural Fit\"),\n//       score: z.number(),\n//       comment: z.string(),\n//     }),\n//     z.object({\n//       name: z.literal(\"Confidence and Clarity\"),\n//       score: z.number(),\n//       comment: z.string(),\n//     }),\n//   ]),\n//   strengths: z.array(z.string()),\n//   areasForImprovement: z.array(z.string()),\n//   finalAssessment: z.string(),\n// });\n//\nexport const interviewCovers = [\n  \"/adobe.png\",\n  \"/amazon.png\",\n  \"/facebook.png\",\n  \"/hostinger.png\",\n  \"/pinterest.png\",\n  \"/quora.png\",\n  \"/reddit.png\",\n  \"/skype.png\",\n  \"/spotify.png\",\n  \"/telegram.png\",\n  \"/tiktok.png\",\n  \"/yahoo.png\",\n];\n\nexport const dummyInterviews: Interview[] = [\n  {\n    id: \"1\",\n    userId: \"user1\",\n    role: \"Frontend Developer\",\n    type: \"Technical\",\n    techstack: [\"React\", \"TypeScript\", \"Next.js\", \"Tailwind CSS\"],\n    level: \"Junior\",\n    questions: [\"What is React?\"],\n    finalized: false,\n    createdAt: \"2024-03-15T10:00:00Z\",\n  },\n  {\n    id: \"2\",\n    userId: \"user1\",\n    role: \"Full Stack Developer\",\n    type: \"Mixed\",\n    techstack: [\"Node.js\", \"Express\", \"MongoDB\", \"React\"],\n    level: \"Senior\",\n    questions: [\"What is Node.js?\"],\n    finalized: false,\n    createdAt: \"2024-03-14T15:30:00Z\",\n  },\n    {\n        id: \"3\",\n        userId: \"user1\",\n        role: \"Full Stack Developer\",\n        type: \"Mixed\",\n        techstack: [\"Node.js\", \"Express\", \"MongoDB\", \"React\"],\n        level: \"Senior\",\n        questions: [\"What is Node.js?\"],\n        finalized: false,\n        createdAt: \"2024-03-14T15:30:00Z\",\n    },\n    {\n        id: \"4\",\n        userId: \"user1\",\n        role: \"Full Stack Developer\",\n        type: \"Mixed\",\n        techstack: [\"Node.js\", \"Express\", \"MongoDB\", \"React\"],\n        level: \"Senior\",\n        questions: [\"What is Node.js?\"],\n        finalized: false,\n        createdAt: \"2024-03-14T15:30:00Z\",\n    },\n    {\n        id: \"5\",\n        userId: \"user1\",\n        role: \"Full Stack Developer\",\n        type: \"Mixed\",\n        techstack: [\"Node.js\", \"Express\", \"MongoDB\", \"React\"],\n        level: \"Senior\",\n        questions: [\"What is Node.js?\"],\n        finalized: false,\n        createdAt: \"2024-03-14T15:30:00Z\",\n    },\n];\n\nexport const techIconBaseURL = \"https://cdn.jsdelivr.net/gh/devicons/devicon/icons\";"],"names":[],"mappings":"AAAA,8DAA8D;AAC9D,2BAA2B;AAC3B,EAAE;;;;;;;;;;;AACK,MAAM,WAAW;IACtB,YAAY;IACZ,SAAS;IACT,OAAO;IACP,WAAW;IACX,QAAQ;IACR,MAAM;IACN,UAAU;IACV,OAAO;IACP,KAAK;IACL,cAAc;IACd,WAAW;IACX,SAAS;IACT,WAAW;IACX,QAAQ;IACR,MAAM;IACN,SAAS;IACT,OAAO;IACP,UAAU;IACV,OAAO;IACP,YAAY;IACZ,QAAQ;IACR,UAAU;IACV,QAAQ;IACR,YAAY;IACZ,KAAK;IACL,OAAO;IACP,KAAK;IACL,cAAc;IACd,QAAQ;IACR,WAAW;IACX,mBAAmB;IACnB,OAAO;IACP,MAAM;IACN,MAAM;IACN,KAAK;IACL,MAAM;IACN,MAAM;IACN,MAAM;IACN,aAAa;IACb,UAAU;IACV,WAAW;IACX,QAAQ;IACR,YAAY;IACZ,IAAI;IACJ,YAAY;IACZ,IAAI;IACJ,cAAc;IACd,WAAW;IACX,SAAS;IACT,YAAY;IACZ,SAAS;IACT,OAAO;IACP,eAAe;IACf,YAAY;IACZ,UAAU;IACV,QAAQ;IACR,SAAS;IACT,YAAY;IACZ,QAAQ;IACR,SAAS;IACT,OAAO;IACP,aAAa;IACb,UAAU;IACV,QAAQ;IACR,aAAa;IACb,UAAU;IACV,KAAK;IACL,MAAM;IACN,KAAK;IACL,QAAQ;IACR,QAAQ;IACR,WAAW;IACX,OAAO;IACP,QAAQ;IACR,OAAO;IACP,MAAM;IACN,OAAO;IACP,UAAU;IACV,SAAS;IACT,MAAM;IACN,OAAO;IACP,MAAM;IACN,OAAO;IACP,MAAM;IACN,WAAW;IACX,QAAQ;IACR,MAAM;IACN,QAAQ;IACR,WAAW;IACX,YAAY;IACZ,SAAS;IACT,QAAQ;IACR,eAAe;AACjB;AA8FO,MAAM,kBAAkB;IAC7B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAEM,MAAM,kBAA+B;IAC1C;QACE,IAAI;QACJ,QAAQ;QACR,MAAM;QACN,MAAM;QACN,WAAW;YAAC;YAAS;YAAc;YAAW;SAAe;QAC7D,OAAO;QACP,WAAW;YAAC;SAAiB;QAC7B,WAAW;QACX,WAAW;IACb;IACA;QACE,IAAI;QACJ,QAAQ;QACR,MAAM;QACN,MAAM;QACN,WAAW;YAAC;YAAW;YAAW;YAAW;SAAQ;QACrD,OAAO;QACP,WAAW;YAAC;SAAmB;QAC/B,WAAW;QACX,WAAW;IACb;IACE;QACI,IAAI;QACJ,QAAQ;QACR,MAAM;QACN,MAAM;QACN,WAAW;YAAC;YAAW;YAAW;YAAW;SAAQ;QACrD,OAAO;QACP,WAAW;YAAC;SAAmB;QAC/B,WAAW;QACX,WAAW;IACf;IACA;QACI,IAAI;QACJ,QAAQ;QACR,MAAM;QACN,MAAM;QACN,WAAW;YAAC;YAAW;YAAW;YAAW;SAAQ;QACrD,OAAO;QACP,WAAW;YAAC;SAAmB;QAC/B,WAAW;QACX,WAAW;IACf;IACA;QACI,IAAI;QACJ,QAAQ;QACR,MAAM;QACN,MAAM;QACN,WAAW;YAAC;YAAW;YAAW;YAAW;SAAQ;QACrD,OAAO;QACP,WAAW;YAAC;SAAmB;QAC/B,WAAW;QACX,WAAW;IACf;CACH;AAEM,MAAM,kBAAkB","debugId":null}},
    {"offset": {"line": 247, "column": 0}, "map": {"version":3,"sources":["file:///D:/Android%20Projects/interview-practice/backend/config/env.js"],"sourcesContent":["import {config} from 'dotenv';\r\n\r\nconfig({path: `.env.${process.env.NODE_ENV || 'development'}.local`});\r\n\r\nexport const {\r\n    PORT,\r\n    SERVER_URL,\r\n    NODE_ENV,\r\n    DB_URI,\r\n    JWT_SECRET, JWT_EXPIRES_IN\r\n} = process.env;"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;;AAEA,IAAA,+IAAM,EAAC;IAAC,MAAM,CAAC,KAAK,EAAE,mDAAwB,cAAc,MAAM,CAAC;AAAA;AAE5D,MAAM,EACT,IAAI,EACJ,UAAU,EACV,QAAQ,EACR,MAAM,EACN,UAAU,EAAE,cAAc,EAC7B,GAAG,QAAQ,GAAG","debugId":null}},
    {"offset": {"line": 271, "column": 0}, "map": {"version":3,"sources":["file:///D:/Android%20Projects/interview-practice/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\nimport {interviewCovers, mappings, techIconBaseURL} from \"@/constants\";\nimport {SERVER_URL} from \"@/backend/config/env\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\nexport const getRandomInterviewCover = () => {\n    const randomIndex = Math.floor(Math.random() * interviewCovers.length);\n    return `/covers${interviewCovers[randomIndex]}`;\n}\n\nconst normalizeTechName = (techName: string) => {\n    const key = techName.toLowerCase().replace(/\\.js$/, \"\").replace(/\\s+/g, \"\");\n    return mappings[key as keyof typeof mappings];\n};\n\nconst checkIconExists = async (url: string) => {\n    try {\n        const response = await fetch(url, { method: \"HEAD\" });\n        return response.ok; // Returns true if the icon exists\n    } catch {\n        return false;\n    }\n};\n\nexport const getTechLogos = async (techArray: string[]) => {\n    const logoURLs = techArray.map((tech) => {\n        const normalized = normalizeTechName(tech);\n        return {\n            tech,\n            url: `${techIconBaseURL}/${normalized}/${normalized}-original.svg`,\n        };\n    });\n\n    const results = await Promise.all(\n        logoURLs.map(async ({ tech, url }) => ({\n            tech,\n            url: (await checkIconExists(url)) ? url : \"/tech.svg\",\n        }))\n    );\n\n    return results;\n};\n\nexport const signInAction = async ({email, password}:{email:string, password:string}) => {\n    const body = {\n        email: email,\n        password: password,\n    }\n\n    const response = await fetch(`${SERVER_URL}/api/v1/auth`, {\n        method: \"POST\",\n        body: JSON.stringify(body),\n        headers: {\n            \"Content-Type\": \"application/json\",\n        }\n    });\n\n    const data = await response.json();\n\n}\n"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;;;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,IAAA,sKAAO,EAAC,IAAA,6IAAI,EAAC;AACtB;AAEO,MAAM,0BAA0B;IACnC,MAAM,cAAc,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,qIAAe,CAAC,MAAM;IACrE,OAAO,CAAC,OAAO,EAAE,qIAAe,CAAC,YAAY,EAAE;AACnD;AAEA,MAAM,oBAAoB,CAAC;IACvB,MAAM,MAAM,SAAS,WAAW,GAAG,OAAO,CAAC,SAAS,IAAI,OAAO,CAAC,QAAQ;IACxE,OAAO,8HAAQ,CAAC,IAA6B;AACjD;AAEA,MAAM,kBAAkB,OAAO;IAC3B,IAAI;QACA,MAAM,WAAW,MAAM,MAAM,KAAK;YAAE,QAAQ;QAAO;QACnD,OAAO,SAAS,EAAE,EAAE,kCAAkC;IAC1D,EAAE,OAAM;QACJ,OAAO;IACX;AACJ;AAEO,MAAM,eAAe,OAAO;IAC/B,MAAM,WAAW,UAAU,GAAG,CAAC,CAAC;QAC5B,MAAM,aAAa,kBAAkB;QACrC,OAAO;YACH;YACA,KAAK,GAAG,qIAAe,CAAC,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,aAAa,CAAC;QACtE;IACJ;IAEA,MAAM,UAAU,MAAM,QAAQ,GAAG,CAC7B,SAAS,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,GAAK,CAAC;YACnC;YACA,KAAK,AAAC,MAAM,gBAAgB,OAAQ,MAAM;QAC9C,CAAC;IAGL,OAAO;AACX;AAEO,MAAM,eAAe,OAAO,EAAC,KAAK,EAAE,QAAQ,EAAiC;IAChF,MAAM,OAAO;QACT,OAAO;QACP,UAAU;IACd;IAEA,MAAM,WAAW,MAAM,MAAM,GAAG,sIAAU,CAAC,YAAY,CAAC,EAAE;QACtD,QAAQ;QACR,MAAM,KAAK,SAAS,CAAC;QACrB,SAAS;YACL,gBAAgB;QACpB;IACJ;IAEA,MAAM,OAAO,MAAM,SAAS,IAAI;AAEpC","debugId":null}},
    {"offset": {"line": 342, "column": 0}, "map": {"version":3,"sources":["file:///D:/Android%20Projects/interview-practice/components/DisplayTechIcon.tsx"],"sourcesContent":["import React from 'react'\r\nimport {getTechLogos} from \"@/lib/utils\";\r\nimport Image from \"next/image\";\r\n\r\nconst DisplayTechIcon = async ({techStack} : {techStack: string[]}) => {\r\n    const techIcons = await getTechLogos(techStack);\r\n\r\n    return (\r\n        <div className=\"flex flex-row -space-x-1\">\r\n            {techIcons.slice(0,3).map(({tech, url}, index ) => (\r\n                <div key={tech} className=\"relative group rounded-full p-2 flex-center bg-dark-300\">\r\n                    <span className=\"absolute bottom-full mb-1 hidden group-hover:flex px-2 py-1 text-xs text-white bg-dark-100 rounded-md shadow-md\">{tech}</span>\r\n                    <div className=\"size-3 object-contain relative\">\r\n                        <Image src={url} alt={tech} fill/>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\nexport default DisplayTechIcon"],"names":[],"mappings":";;;;;AACA;AACA;;;;AAEA,MAAM,kBAAkB,OAAO,EAAC,SAAS,EAAyB;IAC9D,MAAM,YAAY,MAAM,IAAA,4HAAY,EAAC;IAErC,qBACI,8OAAC;QAAI,WAAU;kBACV,UAAU,KAAK,CAAC,GAAE,GAAG,GAAG,CAAC,CAAC,EAAC,IAAI,EAAE,GAAG,EAAC,EAAE,sBACpC,8OAAC;gBAAe,WAAU;;kCACtB,8OAAC;wBAAK,WAAU;kCAAmH;;;;;;kCACnI,8OAAC;wBAAI,WAAU;kCACX,cAAA,8OAAC,wIAAK;4BAAC,KAAK;4BAAK,KAAK;4BAAM,IAAI;;;;;;;;;;;;eAH9B;;;;;;;;;;AAS1B;uCACe","debugId":null}},
    {"offset": {"line": 400, "column": 0}, "map": {"version":3,"sources":["file:///D:/Android%20Projects/interview-practice/components/InterviewCard.tsx"],"sourcesContent":["\"use client\";\r\nimport React from 'react'\r\nimport Image from \"next/image\";\r\nimport dayjs from \"dayjs\";\r\nimport {getRandomInterviewCover} from \"@/lib/utils\";\r\nimport {useRouter} from \"next/navigation\";\r\nimport DisplayTechIcon from \"@/components/DisplayTechIcon\";\r\n\r\nconst InterviewCard = ({interview}: {interview: Interview}) => {\r\n    const router = useRouter();\r\n    const feedback = null as Feedback | null;\r\n    const normailizedType = /mix/gi.test(interview.type) ? 'Mixed' : interview.type;\r\n    const formattedDate = dayjs(feedback?.createdAt || interview.createdAt || Date.now()).format('MMM D, YYYY');\r\n    const feedbackLink = feedback ? `/interview/${interview.id}/feedback` : `/interview/${interview.id}`;\r\n\r\n    return (\r\n        <div className=\"relative space-y-5 px-5 pb-5 pt-10 blue-gradient-dark rounded-lg flex flex-col overflow-hidden\">\r\n            <p className=\"absolute right-0 top-0 w-fit px-3 py-2 bg-dark-500 rounded-bl-md \">{normailizedType}</p>\r\n\r\n            <div className=\"relative size-20 object-cover rounded-full\">\r\n                <Image src={getRandomInterviewCover()} alt={'cover image'} fill />\r\n            </div>\r\n\r\n            <h4>{interview.role} Interview</h4>\r\n\r\n            <div className=\"flex flex-row gap-4 items-center\">\r\n                <div className=\"flex flex-row gap-1 items-center\">\r\n                    <div className=\"relative size-4 object-contain\">\r\n                        <Image src={'/calendar.svg'} alt={'calendar'} fill/>\r\n                    </div>\r\n                    <p>{formattedDate}</p>\r\n\r\n                </div>\r\n\r\n                <div className=\"flex flex-row gap-1 items-center\">\r\n                    <div className=\"relative size-4 object-contain\">\r\n                        <Image src={'/star.svg'} alt={'star'} fill/>\r\n                    </div>\r\n                    <p>{feedback?.totalScore || \"...\"}/100</p>\r\n                </div>\r\n            </div>\r\n\r\n            <p className=\"line-clamp-3\">{feedback?.finalAssessment || \"You haven't taken this interview yet. Take it now to improve your skills.\"}</p>\r\n\r\n            <div className=\"flex flex-row justify-between items-center\">\r\n                <DisplayTechIcon techStack={interview.techstack}/>\r\n\r\n                <button\r\n                    onClick={() => router.push(feedbackLink)}\r\n                    className=\"interview-btn w-fit text-normal-size\"\r\n                >{feedback ? \"Check Feedback\" : \"View Interview\"}</button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default InterviewCard\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AACA;AANA;;;;;;;AAQA,MAAM,gBAAgB,CAAC,EAAC,SAAS,EAAyB;IACtD,MAAM,SAAS,IAAA,+IAAS;IACxB,MAAM,WAAW;IACjB,MAAM,kBAAkB,QAAQ,IAAI,CAAC,UAAU,IAAI,IAAI,UAAU,UAAU,IAAI;IAC/E,MAAM,gBAAgB,IAAA,gJAAK,EAAC,UAAU,aAAa,UAAU,SAAS,IAAI,KAAK,GAAG,IAAI,MAAM,CAAC;IAC7F,MAAM,eAAe,sCAAW,0BAAwC,CAAC,WAAW,EAAE,UAAU,EAAE,EAAE;IAEpG,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC;gBAAE,WAAU;0BAAqE;;;;;;0BAElF,8OAAC;gBAAI,WAAU;0BACX,cAAA,8OAAC,wIAAK;oBAAC,KAAK,IAAA,uIAAuB;oBAAI,KAAK;oBAAe,IAAI;;;;;;;;;;;0BAGnE,8OAAC;;oBAAI,UAAU,IAAI;oBAAC;;;;;;;0BAEpB,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;wBAAI,WAAU;;0CACX,8OAAC;gCAAI,WAAU;0CACX,cAAA,8OAAC,wIAAK;oCAAC,KAAK;oCAAiB,KAAK;oCAAY,IAAI;;;;;;;;;;;0CAEtD,8OAAC;0CAAG;;;;;;;;;;;;kCAIR,8OAAC;wBAAI,WAAU;;0CACX,8OAAC;gCAAI,WAAU;0CACX,cAAA,8OAAC,wIAAK;oCAAC,KAAK;oCAAa,KAAK;oCAAQ,IAAI;;;;;;;;;;;0CAE9C,8OAAC;;oCAAG,UAAU,cAAc;oCAAM;;;;;;;;;;;;;;;;;;;0BAI1C,8OAAC;gBAAE,WAAU;0BAAgB,UAAU,mBAAmB;;;;;;0BAE1D,8OAAC;gBAAI,WAAU;;kCACX,8OAAC,yIAAe;wBAAC,WAAW,UAAU,SAAS;;;;;;kCAE/C,8OAAC;wBACG,SAAS,IAAM,OAAO,IAAI,CAAC;wBAC3B,WAAU;kCACZ,sCAAW,0BAAmB;;;;;;;;;;;;;;;;;;AAKhD;uCACe","debugId":null}},
    {"offset": {"line": 581, "column": 0}, "map": {"version":3,"sources":["file:///D:/Android%20Projects/interview-practice/app/%28root%29/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React from 'react'\nimport Image from 'next/image'\nimport {dummyInterviews} from \"@/constants\";\nimport InterviewCard from \"@/components/InterviewCard\";\nimport {useRouter} from \"next/navigation\";\n\nconst Home = () => {\n    const router = useRouter();\n    return (\n        <div className=\"px-10 max-md:px-2 space-y-8\">\n            <section className=\"w-full blue-gradient-dark rounded-lg flex flex-row items-center p-5\">\n                <div className=\"flex flex-col justify-center items-start w-3/5 max-sm:w-full space-y-5\">\n                    <h3>Get Interview-ready with AI-powered Practice & Feedback</h3>\n                    <p className=\"text-normal-size\">Practice real interview questions & get instant feedback</p>\n                    <button\n                        onClick={() => router.push(\"/\")}\n                        className=\"interview-btn w-1/2 max-sm:w-full text-normal-size\"\n                    >Start an interview</button>\n                </div>\n                <div className=\"w-2/5 flex-center max-sm:hidden relative size-50\">\n                    <Image src={'/robot.png'} alt={'robo'} fill className=\"object-contain\"/>\n                </div>\n            </section>\n\n            <section className=\"space-y-5\">\n                <h3>Your Interview</h3>\n                <div className=\"grid gap-6 grid-cols-3 max-lg:grid-cols-2 max-sm:grid-cols-1\">\n                    {dummyInterviews.map((interview) => (\n                        <InterviewCard interview={interview} key={interview.id}/>\n                    ))}\n                </div>\n            </section>\n\n            <section className=\"space-y-5\">\n                <h3>Interviews</h3>\n                <div className=\"grid gap-6 grid-cols-3 max-lg:grid-cols-2 max-sm:grid-cols-1\">\n                    {dummyInterviews.map((interview) => (\n                        <InterviewCard interview={interview} key={interview.id}/>\n                    ))}\n                </div>\n            </section>\n        </div>\n    )\n}\nexport default Home\n"],"names":[],"mappings":";;;;;AAGA;AACA;AACA;AACA;AANA;;;;;;AAQA,MAAM,OAAO;IACT,MAAM,SAAS,IAAA,+IAAS;IACxB,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC;gBAAQ,WAAU;;kCACf,8OAAC;wBAAI,WAAU;;0CACX,8OAAC;0CAAG;;;;;;0CACJ,8OAAC;gCAAE,WAAU;0CAAmB;;;;;;0CAChC,8OAAC;gCACG,SAAS,IAAM,OAAO,IAAI,CAAC;gCAC3B,WAAU;0CACb;;;;;;;;;;;;kCAEL,8OAAC;wBAAI,WAAU;kCACX,cAAA,8OAAC,wIAAK;4BAAC,KAAK;4BAAc,KAAK;4BAAQ,IAAI;4BAAC,WAAU;;;;;;;;;;;;;;;;;0BAI9D,8OAAC;gBAAQ,WAAU;;kCACf,8OAAC;kCAAG;;;;;;kCACJ,8OAAC;wBAAI,WAAU;kCACV,qIAAe,CAAC,GAAG,CAAC,CAAC,0BAClB,8OAAC,uIAAa;gCAAC,WAAW;+BAAgB,UAAU,EAAE;;;;;;;;;;;;;;;;0BAKlE,8OAAC;gBAAQ,WAAU;;kCACf,8OAAC;kCAAG;;;;;;kCACJ,8OAAC;wBAAI,WAAU;kCACV,qIAAe,CAAC,GAAG,CAAC,CAAC,0BAClB,8OAAC,uIAAa;gCAAC,WAAW;+BAAgB,UAAU,EAAE;;;;;;;;;;;;;;;;;;;;;;AAM9E;uCACe","debugId":null}}]
}