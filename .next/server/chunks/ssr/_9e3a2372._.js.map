{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///D:/Android%20Projects/interview-practice/components/Agent.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport Image from \"next/image\";\r\nimport {useRouter} from \"next/navigation\";\r\n\r\nenum CallStatus {\r\n    ACTIVE = \"ACTIVE\",\r\n    INACTIVE = \"INACTIVE\",\r\n    CONECTING = \"CONECTING\",\r\n    FINISHED = \"FINISHED\",\r\n}\r\n\r\ninterface SavedMessage {\r\n    role: 'user' | 'system' | 'assistant';\r\n    content: string;\r\n}\r\n\r\nexport const Agent = (agentProps:AgentProps) => {\r\n\r\n    const router = useRouter();\r\n\r\n    const [isSpeaking, setIsSpeaking] = useState(false);\r\n    const [callStatus, setCallStatus] = useState<CallStatus>(CallStatus.INACTIVE);\r\n    const [message, setMessage] = useState<SavedMessage[]>([]);\r\n\r\n    useEffect(() => {\r\n        const onCall\r\n    })\r\n\r\n    const borderStyle = isSpeaking ? 'border-2 border-white blue-gradient-dark' : 'dark-gradient';\r\n\r\n    return (\r\n        <div className=\"flex flex-col w-full gap-10\">\r\n            <div className=\"flex flex-row items-center justify-between w-full\">\r\n                <div className={`flex flex-col items-center justify-center gap-5 overflow-hidden h-[400px] max-sm:h-[300px] w-5/11 rounded-lg ${borderStyle}`}>\r\n                    <div className=\"flex items-center justify-center size-20 rounded-full p-5 blue-gradient relative z-10\">\r\n                        <div className=\"size-full relative rounded-full\">\r\n                            <Image src={'/ai-avatar.png'} alt={''} fill className=\"object-contain\"/>\r\n                        </div>\r\n                        {isSpeaking && (\r\n                            <span className=\"absolute size-5/6 animate-ping rounded-full bg-dark-400 opacity-75\"></span>\r\n                        )}\r\n                    </div>\r\n                    <h4>AI Interviewer</h4>\r\n                </div>\r\n\r\n                <div className={`flex flex-col items-center justify-center gap-5 overflow-hidden h-[400px] max-sm:h-[300px] w-5/11 rounded-lg ${borderStyle}`}>\r\n                    <div className=\"flex items-center justify-center size-20 rounded-full p-5 blue-gradient relative z-10\">\r\n                        <div className=\"size-full relative rounded-full\">\r\n                            <Image src={'/user-avatar.png'} alt={''} fill className=\"object-cover\"/>\r\n                        </div>\r\n                        {isSpeaking && (\r\n                            <span className=\"absolute size-5/6 animate-ping rounded-full bg-dark-400 opacity-75\"></span>\r\n                        )}\r\n                    </div>\r\n                    <h4>{agentProps.userName}</h4>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"flex items-center justify-center w-full dark-gradient border-2 border-dark-200 rounded-lg p-3\">\r\n                <p className=\"font-semibold\">Description Part</p>\r\n            </div>\r\n\r\n            <div className=\"flex items-center justify-center w-full\">\r\n                {callStatus !== \"ACTIVE\" ? (\r\n                    <button className=\"flex flex-row items-center justify-center rounded-3xl py-2 px-5 bg-success-200 hover:bg-success-100 gap-2 font-semibold cursor-pointer\">\r\n                        <div className=\"size-5 relative\">\r\n                            <Image src={'/call.svg'} alt={''} fill className=\"object-contain\"/>\r\n                        </div>\r\n                        {callStatus === \"INACTIVE\" || callStatus === \"FINISHED\" ? \"Call\" : \". . .\"}\r\n\r\n                    </button>\r\n                ) : (\r\n                    <button className=\"flex flex-row items-center justify-center rounded-3xl py-2 px-5 bg-destructive-200 hover:bg-destructive-100 gap-2 font-semibold cursor-pointer\">\r\n                        <div className=\"size-5 relative\">\r\n                            <Image src={'/call-slash.svg'} alt={''} fill className=\"object-contain\"/>\r\n                        </div>\r\n                        Leave Interview\r\n                    </button>\r\n                )}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;;;;;AAEA,IAAA,AAAK,oCAAA;;;;;WAAA;EAAA;AAYE,MAAM,QAAQ,CAAC;IAElB,MAAM,SAAS,IAAA,+IAAS;IAExB,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,iNAAQ,EAAC;IAC7C,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,iNAAQ;IAC5C,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,iNAAQ,EAAiB,EAAE;IAEzD,IAAA,kNAAS,EAAC;QACN,MAAM;IACV;IAEA,MAAM,cAAc,aAAa,6CAA6C;IAE9E,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;wBAAI,WAAW,CAAC,6GAA6G,EAAE,aAAa;;0CACzI,8OAAC;gCAAI,WAAU;;kDACX,8OAAC;wCAAI,WAAU;kDACX,cAAA,8OAAC,wIAAK;4CAAC,KAAK;4CAAkB,KAAK;4CAAI,IAAI;4CAAC,WAAU;;;;;;;;;;;oCAEzD,4BACG,8OAAC;wCAAK,WAAU;;;;;;;;;;;;0CAGxB,8OAAC;0CAAG;;;;;;;;;;;;kCAGR,8OAAC;wBAAI,WAAW,CAAC,6GAA6G,EAAE,aAAa;;0CACzI,8OAAC;gCAAI,WAAU;;kDACX,8OAAC;wCAAI,WAAU;kDACX,cAAA,8OAAC,wIAAK;4CAAC,KAAK;4CAAoB,KAAK;4CAAI,IAAI;4CAAC,WAAU;;;;;;;;;;;oCAE3D,4BACG,8OAAC;wCAAK,WAAU;;;;;;;;;;;;0CAGxB,8OAAC;0CAAI,WAAW,QAAQ;;;;;;;;;;;;;;;;;;0BAKhC,8OAAC;gBAAI,WAAU;0BACX,cAAA,8OAAC;oBAAE,WAAU;8BAAgB;;;;;;;;;;;0BAGjC,8OAAC;gBAAI,WAAU;0BACV,eAAe,yBACZ,8OAAC;oBAAO,WAAU;;sCACd,8OAAC;4BAAI,WAAU;sCACX,cAAA,8OAAC,wIAAK;gCAAC,KAAK;gCAAa,KAAK;gCAAI,IAAI;gCAAC,WAAU;;;;;;;;;;;wBAEpD,eAAe,cAAc,eAAe,aAAa,SAAS;;;;;;6EAIvE,8OAAC;oBAAO,WAAU;;sCACd,8OAAC;4BAAI,WAAU;sCACX,cAAA,8OAAC,wIAAK;gCAAC,KAAK;gCAAmB,KAAK;gCAAI,IAAI;gCAAC,WAAU;;;;;;;;;;;wBACrD;;;;;;;;;;;;;;;;;;AAQ9B","debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///D:/Android%20Projects/interview-practice/lib/actions/auth.action.ts"],"sourcesContent":["export const getCurrentUser = async () => {\r\n    try {\r\n        const endpoint = `${process.env.NEXT_PUBLIC_SERVER_URL}/users/me`;\r\n\r\n        const response = await fetch(endpoint, {\r\n            method: 'GET',\r\n            credentials: \"include\", // required to send cookies\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error(\"Failed to fetch current user\");\r\n        }\r\n\r\n\r\n        const data = await response.json();\r\n        return data.user;\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}"],"names":[],"mappings":";;;;AAAO,MAAM,iBAAiB;IAC1B,IAAI;QACA,MAAM,WAAW,oEAAsC,SAAS,CAAC;QAEjE,MAAM,WAAW,MAAM,MAAM,UAAU;YACnC,QAAQ;YACR,aAAa;QACjB;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YACd,MAAM,IAAI,MAAM;QACpB;QAGA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,OAAO,KAAK,IAAI;IACpB,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC;IAClB;AACJ","debugId":null}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":["file:///D:/Android%20Projects/interview-practice/app/%28root%29/interview/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React from 'react'\nimport {InterviewForm} from \"@/components/InterviewForm\";\nimport {Agent} from \"@/components/Agent\";\nimport {getCurrentUser} from \"@/lib/actions/auth.action\";\n\n\n\nconst InterviewPage = () => {\n\n    const user = getCurrentUser();\n\n    return (\n        <div className=\"flex justify-center items-center\">\n            <Agent></Agent>\n        </div>\n    )\n}\nexport default InterviewPage\n"],"names":[],"mappings":";;;;;AAIA;AACA;AALA;;;;AASA,MAAM,gBAAgB;IAElB,MAAM,OAAO,IAAA,kJAAc;IAE3B,qBACI,8OAAC;QAAI,WAAU;kBACX,cAAA,8OAAC,6HAAK;;;;;;;;;;AAGlB;uCACe","debugId":null}},
    {"offset": {"line": 283, "column": 0}, "map": {"version":3,"sources":["file:///D:/Android%20Projects/interview-practice/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,4HACRC,QAAQ,CAAC,YAAY,CAAEC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 288, "column": 0}, "map": {"version":3,"sources":["file:///D:/Android%20Projects/interview-practice/node_modules/next/src/shared/lib/image-external.tsx"],"sourcesContent":["import type { ImageConfigComplete, ImageLoaderProps } from './image-config'\nimport type { ImageProps, ImageLoader, StaticImageData } from './get-img-props'\n\nimport { getImgProps } from './get-img-props'\nimport { Image } from '../../client/image-component'\n\n// This is replaced by webpack alias\nimport defaultLoader from 'next/dist/shared/lib/image-loader'\n\n/**\n * For more advanced use cases, you can call `getImageProps()`\n * to get the props that would be passed to the underlying `<img>` element,\n * and instead pass to them to another component, style, canvas, etc.\n *\n * Read more: [Next.js docs: `getImageProps`](https://nextjs.org/docs/app/api-reference/components/image#getimageprops)\n */\nexport function getImageProps(imgProps: ImageProps) {\n  const { props } = getImgProps(imgProps, {\n    defaultLoader,\n    // This is replaced by webpack define plugin\n    imgConf: process.env.__NEXT_IMAGE_OPTS as any as ImageConfigComplete,\n  })\n  // Normally we don't care about undefined props because we pass to JSX,\n  // but this exported function could be used by the end user for anything\n  // so we delete undefined props to clean it up a little.\n  for (const [key, value] of Object.entries(props)) {\n    if (value === undefined) {\n      delete props[key as keyof typeof props]\n    }\n  }\n  return { props }\n}\n\nexport default Image\n\nexport type { ImageProps, ImageLoaderProps, ImageLoader, StaticImageData }\n"],"names":["getImageProps","imgProps","props","getImgProps","defaultLoader","imgConf","process","env","__NEXT_IMAGE_OPTS","key","value","Object","entries","undefined","Image"],"mappings":";;;;;;;;;;;;;;IAiCA,OAAoB,EAAA;eAApB;;IAjBgBA,aAAa,EAAA;eAAbA;;;;6BAbY;gCACN;sEAGI;AASnB,SAASA,cAAcC,QAAoB;IAChD,MAAM,EAAEC,KAAK,EAAE,GAAGC,CAAAA,GAAAA,aAAAA,WAAW,EAACF,UAAU;QACtCG,eAAAA,aAAAA,OAAa;QACb,4CAA4C;QAC5CC,OAAAA,EAASC,QAAQC,GAAG,CAACC,iBAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;IACxC;IACA,uEAAuE;IACvE,wEAAwE;IACxE,wDAAwD;IACxD,KAAK,MAAM,CAACC,KAAKC,MAAM,IAAIC,OAAOC,OAAO,CAACV,OAAQ;QAChD,IAAIQ,UAAUG,WAAW;YACvB,OAAOX,KAAK,CAACO,IAA0B;QACzC;IACF;IACA,OAAO;QAAEP;IAAM;AACjB;MAEA,WAAeY,gBAAAA,KAAK","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 362, "column": 0}, "map": {"version":3,"sources":["file:///D:/Android%20Projects/interview-practice/node_modules/next/image.js"],"sourcesContent":["module.exports = require('./dist/shared/lib/image-external')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 366, "column": 0}, "map": {"version":3,"sources":["file:///D:/Android%20Projects/interview-practice/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}