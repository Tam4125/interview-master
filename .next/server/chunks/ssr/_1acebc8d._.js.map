{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///D:/Android%20Projects/interview-practice/components/FormComponents.tsx"],"sourcesContent":["import React from \"react\";\r\nimport Image from \"next/image\";\r\n\r\ninterface FormFieldInterface {\r\n    placeholder: string;\r\n    value: string;\r\n    onChangeFunc?: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n    icon?:any;\r\n    labelShown?:boolean;\r\n    type?: \"text\" | \"password\" | \"email\";\r\n}\r\n\r\nexport const FormField = ({placeholder, value, onChangeFunc, icon, labelShown, type}: FormFieldInterface) => {\r\n    return (\r\n        <div className=\"flex-center border-b border-white pb-1 relative focus:border-dark-400 transition-colors\">\r\n            <input\r\n                type={type}\r\n                placeholder=\"\"\r\n                value={value}\r\n                onChange={onChangeFunc}\r\n                className=\"peer w-full flex-1 text-white bg-transparent placeholder-transparent outline-none transition-colors text-sm\"\r\n            />\r\n\r\n            {labelShown && (\r\n                <label\r\n                    className=\"absolute left-0 text-gray-400 transition-all text-sm\r\n                   peer-placeholder-shown:top-1 peer-placeholder-shown:text-sm peer-placeholder-shown:text-gray-400\r\n                   peer-focus:-top-5 peer-focus:text-sm peer-focus:text-dark-400 peer-focus:font-semibold\"\r\n                >\r\n                    {placeholder}\r\n                </label>\r\n            )}\r\n            {icon && (\r\n                <div className=\"relative size-4\">\r\n                    <Image\r\n                        src={icon}\r\n                        alt={`${placeholder}Icon`}\r\n                        fill\r\n                        className=\"object-contain\"\r\n                    />\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const AuthButton = ({authChoice} : {authChoice:string}) => {\r\n    return (\r\n        <div>\r\n            <button\r\n                type=\"submit\"\r\n                className=\"relative font-bold text-white rounded-full py-2 px-3 bg-dark-400 w-full hover:bg-white hover:text-dark-400 duration-1000 transition-transform ease-in-out hover:scale-105\"\r\n            >{authChoice}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const FormFieldBasic = ({placeholder, value, onChangeFunc, labelShown}: FormFieldInterface) => {\r\n    return (\r\n        <div className=\"flex-center border-b border-white pb-1 relative focus:border-dark-400 transition-colors\">\r\n            <input\r\n                type=\"string\"\r\n                placeholder=\"\"\r\n                value={value}\r\n                onChange={onChangeFunc}\r\n                className=\"peer w-full flex-1 text-white bg-transparent placeholder-transparent outline-none transition-colors text-sm\"\r\n            />\r\n\r\n            {labelShown && (\r\n                <label\r\n                    className=\"absolute left-0 text-gray-400 transition-all text-sm pointer-events-none\"\r\n                >\r\n                    {placeholder}\r\n                </label>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\n"],"names":[],"mappings":";;;;;;;;;AACA;;;AAWO,MAAM,YAAY,CAAC,EAAC,WAAW,EAAE,KAAK,EAAE,YAAY,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAqB;IACpG,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC;gBACG,MAAM;gBACN,aAAY;gBACZ,OAAO;gBACP,UAAU;gBACV,WAAU;;;;;;YAGb,4BACG,8OAAC;gBACG,WAAU;0BAIT;;;;;;YAGR,sBACG,8OAAC;gBAAI,WAAU;0BACX,cAAA,8OAAC,wIAAK;oBACF,KAAK;oBACL,KAAK,GAAG,YAAY,IAAI,CAAC;oBACzB,IAAI;oBACJ,WAAU;;;;;;;;;;;;;;;;;AAMlC;AAEO,MAAM,aAAa,CAAC,EAAC,UAAU,EAAuB;IACzD,qBACI,8OAAC;kBACG,cAAA,8OAAC;YACG,MAAK;YACL,WAAU;sBACZ;;;;;;;;;;;AAGd;AAEO,MAAM,iBAAiB,CAAC,EAAC,WAAW,EAAE,KAAK,EAAE,YAAY,EAAE,UAAU,EAAqB;IAC7F,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC;gBACG,MAAK;gBACL,aAAY;gBACZ,OAAO;gBACP,UAAU;gBACV,WAAU;;;;;;YAGb,4BACG,8OAAC;gBACG,WAAU;0BAET;;;;;;;;;;;;AAKrB","debugId":null}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":["file:///D:/Android%20Projects/interview-practice/components/InterviewForm.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport {useState} from \"react\";\r\nimport {FormFieldBasic} from \"@/components/FormComponents\";\r\nimport Image from \"next/image\";\r\nimport {useRouter} from \"next/navigation\";\r\n\r\nexport const InterviewForm = () => {\r\n    const [type, setType] = useState(\"Technical\");\r\n    const [role, setRole] = useState(\"\");\r\n    const [level, setLevel] = useState(\"Fresher\");\r\n    const [techstack, setTechstack] = useState(\"\");\r\n    const [interval, setInterval] = useState(\"10 minutes\");\r\n    const [profilePicture, setProfilePicture] = useState(null as File | null);\r\n\r\n    const handleSubmit = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n\r\n        const endpoint = `${process.env.NEXT_PUBLIC_SERVER_URL}/vapi/generate`;\r\n        const reqBody = {\r\n            type: type,\r\n            role: role,\r\n            level: level,\r\n            techstack: techstack.split(\",\"),\r\n            interval: interval,\r\n            userId: userid,\r\n        }\r\n    }\r\n\r\n    const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files && e.target.files[0]) {\r\n            setProfilePicture(e.target.files[0]);\r\n        }\r\n    }\r\n        return (\r\n        <div className=\"flex flex-col w-full justify-center items-start border-white rounded-lg border-2 gap-15 dark-gradient p-10\">\r\n            <div className=\"flex flex-col gap-2\">\r\n                <h3>Starting Your Interview</h3>\r\n                <p className=\"text-white!\">Customize your mock interview to suit your need</p>\r\n            </div>\r\n\r\n            <form onSubmit={handleSubmit} className=\"flex flex-col gap-5 w-full\">\r\n                <div className=\"flex flex-col gap-1\">\r\n                    <label className=\"text-light-100 text-normal-size\">What type of interview you would like to practice?</label>\r\n                    <select\r\n                        name=\"type\"\r\n                        value={type}\r\n                        onChange={(e) => setType(e.target.value)}\r\n                        className=\"flex-center border-b border-white pb-1 relative focus:border-dark-400 transition-colors w-full\"\r\n                    >\r\n                        <option>Technical</option>\r\n                        <option>Non-Technical</option>\r\n                        <option>Mixed</option>\r\n\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"flex flex-col gap-1\">\r\n                    <label className=\"text-light-100 text-normal-size\">What role are you focusing on?</label>\r\n                    <FormFieldBasic\r\n                        placeholder={\"Select your role\"}\r\n                        value={role}\r\n                        labelShown={role==\"\"}\r\n                        onChangeFunc={(e) => setRole(e.target.value)}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"flex flex-col gap-1\">\r\n                    <label className=\"text-light-100 text-normal-size\">Which level you are?</label>\r\n                    <select\r\n                        name=\"level\"\r\n                        value={level}\r\n                        onChange={(e) => setLevel(e.target.value)}\r\n                        className=\"flex-center border-b border-white pb-1 relative focus:border-dark-400 transition-colors w-full\"\r\n                    >\r\n                        <option>Fresher</option>\r\n                        <option>Middle</option>\r\n                        <option>Senior</option>\r\n\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"flex flex-col gap-1\">\r\n                    <label className=\"text-light-100 text-normal-size\">Which tech stack would you like to focus on?</label>\r\n                    <FormFieldBasic\r\n                        placeholder={\"Select your preferred tech stack\"}\r\n                        value={techstack}\r\n                        labelShown={techstack==\"\"}\r\n                        onChangeFunc={(e) => setTechstack(e.target.value)}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"flex flex-col gap-1\">\r\n                    <label className=\"text-light-100 text-normal-size\">How long would you like the interview to be?</label>\r\n                    <select\r\n                        name=\"interval\"\r\n                        value={interval}\r\n                        onChange={(e) => setInterval(e.target.value)}\r\n                        className=\"flex-center border-b border-white pb-1 relative focus:border-dark-400 transition-colors w-full\"\r\n                    >\r\n                        <option>10 minutes</option>\r\n                        <option>15 minutes</option>\r\n                        <option>20 minutes</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"flex flex-col gap-1\">\r\n                    <label className=\"text-light-100 text-normal-size\">Profile Picture</label>\r\n                    <div className=\"flex flex-row w-full items-center justify-center gap-2 bg-dark-200 p-3 rounded-3xl cursor-pointer\">\r\n                        <div className=\"relative size-5\">\r\n                            <Image src={'/upload.svg'} alt={'uploadIcon'} fill className=\"object-contain\"/>\r\n                        </div>\r\n                        <input\r\n                            type=\"file\"\r\n                            accept=\"image/*\"\r\n                            onChange={handleFileChange}\r\n                            className=\"text-sm cursor-pointer\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='flex flex-col gap-1'>\r\n                    <button className=\"interview-btn w-full text-normal-size\">\r\n                        Start Interview\r\n                    </button>\r\n                </div>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 471, "column": 0}, "map": {"version":3,"sources":["file:///D:/Android%20Projects/interview-practice/app/%28root%29/interview/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React from 'react'\nimport {InterviewForm} from \"@/components/InterviewForm\";\n\n\n\nconst InterviewPage = () => {\n    return (\n        <div className=\"flex justify-center items-center\">\n            <div className=\"flex justify-center items-center w-1/2\">\n                <InterviewForm/>\n            </div>\n        </div>\n    )\n}\nexport default InterviewPage\n"],"names":[],"mappings":";;;;;AAGA;AAHA;;;AAOA,MAAM,gBAAgB;IAClB,qBACI,8OAAC;QAAI,WAAU;kBACX,cAAA,8OAAC;YAAI,WAAU;sBACX,cAAA,8OAAC,6IAAa;;;;;;;;;;;;;;;AAI9B;uCACe","debugId":null}},
    {"offset": {"line": 506, "column": 0}, "map": {"version":3,"sources":["file:///D:/Android%20Projects/interview-practice/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,4HACRC,QAAQ,CAAC,YAAY,CAAEC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 511, "column": 0}, "map": {"version":3,"sources":["file:///D:/Android%20Projects/interview-practice/node_modules/next/src/shared/lib/image-external.tsx"],"sourcesContent":["import type { ImageConfigComplete, ImageLoaderProps } from './image-config'\nimport type { ImageProps, ImageLoader, StaticImageData } from './get-img-props'\n\nimport { getImgProps } from './get-img-props'\nimport { Image } from '../../client/image-component'\n\n// This is replaced by webpack alias\nimport defaultLoader from 'next/dist/shared/lib/image-loader'\n\n/**\n * For more advanced use cases, you can call `getImageProps()`\n * to get the props that would be passed to the underlying `<img>` element,\n * and instead pass to them to another component, style, canvas, etc.\n *\n * Read more: [Next.js docs: `getImageProps`](https://nextjs.org/docs/app/api-reference/components/image#getimageprops)\n */\nexport function getImageProps(imgProps: ImageProps) {\n  const { props } = getImgProps(imgProps, {\n    defaultLoader,\n    // This is replaced by webpack define plugin\n    imgConf: process.env.__NEXT_IMAGE_OPTS as any as ImageConfigComplete,\n  })\n  // Normally we don't care about undefined props because we pass to JSX,\n  // but this exported function could be used by the end user for anything\n  // so we delete undefined props to clean it up a little.\n  for (const [key, value] of Object.entries(props)) {\n    if (value === undefined) {\n      delete props[key as keyof typeof props]\n    }\n  }\n  return { props }\n}\n\nexport default Image\n\nexport type { ImageProps, ImageLoaderProps, ImageLoader, StaticImageData }\n"],"names":["getImageProps","imgProps","props","getImgProps","defaultLoader","imgConf","process","env","__NEXT_IMAGE_OPTS","key","value","Object","entries","undefined","Image"],"mappings":";;;;;;;;;;;;;;IAiCA,OAAoB,EAAA;eAApB;;IAjBgBA,aAAa,EAAA;eAAbA;;;;6BAbY;gCACN;sEAGI;AASnB,SAASA,cAAcC,QAAoB;IAChD,MAAM,EAAEC,KAAK,EAAE,GAAGC,CAAAA,GAAAA,aAAAA,WAAW,EAACF,UAAU;QACtCG,eAAAA,aAAAA,OAAa;QACb,4CAA4C;QAC5CC,OAAAA,EAASC,QAAQC,GAAG,CAACC,iBAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;IACxC;IACA,uEAAuE;IACvE,wEAAwE;IACxE,wDAAwD;IACxD,KAAK,MAAM,CAACC,KAAKC,MAAM,IAAIC,OAAOC,OAAO,CAACV,OAAQ;QAChD,IAAIQ,UAAUG,WAAW;YACvB,OAAOX,KAAK,CAACO,IAA0B;QACzC;IACF;IACA,OAAO;QAAEP;IAAM;AACjB;MAEA,WAAeY,gBAAAA,KAAK","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 585, "column": 0}, "map": {"version":3,"sources":["file:///D:/Android%20Projects/interview-practice/node_modules/next/image.js"],"sourcesContent":["module.exports = require('./dist/shared/lib/image-external')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}