{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///D:/Android%20Projects/interview-practice/constants/index.ts"],"sourcesContent":["// import { CreateAssistantDTO } from \"@vapi-ai/web/dist/api\";\n// import { z } from \"zod\";\n//\nexport const mappings = {\n  \"react.js\": \"react\",\n  reactjs: \"react\",\n  react: \"react\",\n  \"next.js\": \"nextjs\",\n  nextjs: \"nextjs\",\n  next: \"nextjs\",\n  \"vue.js\": \"vuejs\",\n  vuejs: \"vuejs\",\n  vue: \"vuejs\",\n  \"express.js\": \"express\",\n  expressjs: \"express\",\n  express: \"express\",\n  \"node.js\": \"nodejs\",\n  nodejs: \"nodejs\",\n  node: \"nodejs\",\n  mongodb: \"mongodb\",\n  mongo: \"mongodb\",\n  mongoose: \"mongoose\",\n  mysql: \"mysql\",\n  postgresql: \"postgresql\",\n  sqlite: \"sqlite\",\n  firebase: \"firebase\",\n  docker: \"docker\",\n  kubernetes: \"kubernetes\",\n  aws: \"aws\",\n  azure: \"azure\",\n  gcp: \"gcp\",\n  digitalocean: \"digitalocean\",\n  heroku: \"heroku\",\n  photoshop: \"photoshop\",\n  \"adobe photoshop\": \"photoshop\",\n  html5: \"html5\",\n  html: \"html5\",\n  css3: \"css3\",\n  css: \"css3\",\n  sass: \"sass\",\n  scss: \"sass\",\n  less: \"less\",\n  tailwindcss: \"tailwindcss\",\n  tailwind: \"tailwindcss\",\n  bootstrap: \"bootstrap\",\n  jquery: \"jquery\",\n  typescript: \"typescript\",\n  ts: \"typescript\",\n  javascript: \"javascript\",\n  js: \"javascript\",\n  \"angular.js\": \"angular\",\n  angularjs: \"angular\",\n  angular: \"angular\",\n  \"ember.js\": \"ember\",\n  emberjs: \"ember\",\n  ember: \"ember\",\n  \"backbone.js\": \"backbone\",\n  backbonejs: \"backbone\",\n  backbone: \"backbone\",\n  nestjs: \"nestjs\",\n  graphql: \"graphql\",\n  \"graph ql\": \"graphql\",\n  apollo: \"apollo\",\n  webpack: \"webpack\",\n  babel: \"babel\",\n  \"rollup.js\": \"rollup\",\n  rollupjs: \"rollup\",\n  rollup: \"rollup\",\n  \"parcel.js\": \"parcel\",\n  parceljs: \"parcel\",\n  npm: \"npm\",\n  yarn: \"yarn\",\n  git: \"git\",\n  github: \"github\",\n  gitlab: \"gitlab\",\n  bitbucket: \"bitbucket\",\n  figma: \"figma\",\n  prisma: \"prisma\",\n  redux: \"redux\",\n  flux: \"flux\",\n  redis: \"redis\",\n  selenium: \"selenium\",\n  cypress: \"cypress\",\n  jest: \"jest\",\n  mocha: \"mocha\",\n  chai: \"chai\",\n  karma: \"karma\",\n  vuex: \"vuex\",\n  \"nuxt.js\": \"nuxt\",\n  nuxtjs: \"nuxt\",\n  nuxt: \"nuxt\",\n  strapi: \"strapi\",\n  wordpress: \"wordpress\",\n  contentful: \"contentful\",\n  netlify: \"netlify\",\n  vercel: \"vercel\",\n  \"aws amplify\": \"amplify\",\n};\n\n// export const interviewer: CreateAssistantDTO = {\n//   name: \"Interviewer\",\n//   firstMessage:\n//     \"Hello! Thank you for taking the time to speak with me today. I'm excited to learn more about you and your experience.\",\n//   transcriber: {\n//     provider: \"deepgram\",\n//     model: \"nova-2\",\n//     language: \"en\",\n//   },\n//   voice: {\n//     provider: \"11labs\",\n//     voiceId: \"sarah\",\n//     stability: 0.4,\n//     similarityBoost: 0.8,\n//     speed: 0.9,\n//     style: 0.5,\n//     useSpeakerBoost: true,\n//   },\n//   model: {\n//     provider: \"openai\",\n//     model: \"gpt-4\",\n//     messages: [\n//       {\n//         role: \"system\",\n//         content: `You are a professional job interviewer conducting a real-time voice interview with a candidate. Your goal is to assess their qualifications, motivation, and fit for the role.\n//\n// Interview Guidelines:\n// Follow the structured question flow:\n// {{questions}}\n//\n// Engage naturally & react appropriately:\n// Listen actively to responses and acknowledge them before moving forward.\n// Ask brief follow-up questions if a response is vague or requires more detail.\n// Keep the conversation flowing smoothly while maintaining control.\n// Be professional, yet warm and welcoming:\n//\n// Use official yet friendly language.\n// Keep responses concise and to the point (like in a real voice interview).\n// Avoid robotic phrasing—sound natural and conversational.\n// Answer the candidate’s questions professionally:\n//\n// If asked about the role, company, or expectations, provide a clear and relevant answer.\n// If unsure, redirect the candidate to HR for more details.\n//\n// Conclude the interview properly:\n// Thank the candidate for their time.\n// Inform them that the company will reach out soon with feedback.\n// End the conversation on a polite and positive note.\n//\n//\n// - Be sure to be professional and polite.\n// - Keep all your responses short and simple. Use official language, but be kind and welcoming.\n// - This is a voice conversation, so keep your responses short, like in a real conversation. Don't ramble for too long.`,\n//       },\n//     ],\n//   },\n// };\n//\n// export const feedbackSchema = z.object({\n//   totalScore: z.number(),\n//   categoryScores: z.tuple([\n//     z.object({\n//       name: z.literal(\"Communication Skills\"),\n//       score: z.number(),\n//       comment: z.string(),\n//     }),\n//     z.object({\n//       name: z.literal(\"Technical Knowledge\"),\n//       score: z.number(),\n//       comment: z.string(),\n//     }),\n//     z.object({\n//       name: z.literal(\"Problem Solving\"),\n//       score: z.number(),\n//       comment: z.string(),\n//     }),\n//     z.object({\n//       name: z.literal(\"Cultural Fit\"),\n//       score: z.number(),\n//       comment: z.string(),\n//     }),\n//     z.object({\n//       name: z.literal(\"Confidence and Clarity\"),\n//       score: z.number(),\n//       comment: z.string(),\n//     }),\n//   ]),\n//   strengths: z.array(z.string()),\n//   areasForImprovement: z.array(z.string()),\n//   finalAssessment: z.string(),\n// });\n//\nexport const interviewCovers = [\n  \"/adobe.png\",\n  \"/amazon.png\",\n  \"/facebook.png\",\n  \"/hostinger.png\",\n  \"/pinterest.png\",\n  \"/quora.png\",\n  \"/reddit.png\",\n  \"/skype.png\",\n  \"/spotify.png\",\n  \"/telegram.png\",\n  \"/tiktok.png\",\n  \"/yahoo.png\",\n];\n\nexport const dummyInterviews: Interview[] = [\n  {\n    id: \"1\",\n    userId: \"user1\",\n    role: \"Frontend Developer\",\n    type: \"Technical\",\n    techstack: [\"React\", \"TypeScript\", \"Next.js\", \"Tailwind CSS\"],\n    level: \"Junior\",\n    questions: [\"What is React?\"],\n    finalized: false,\n    createdAt: \"2024-03-15T10:00:00Z\",\n  },\n  {\n    id: \"2\",\n    userId: \"user1\",\n    role: \"Full Stack Developer\",\n    type: \"Mixed\",\n    techstack: [\"Node.js\", \"Express\", \"MongoDB\", \"React\"],\n    level: \"Senior\",\n    questions: [\"What is Node.js?\"],\n    finalized: false,\n    createdAt: \"2024-03-14T15:30:00Z\",\n  },\n    {\n        id: \"3\",\n        userId: \"user1\",\n        role: \"Full Stack Developer\",\n        type: \"Mixed\",\n        techstack: [\"Node.js\", \"Express\", \"MongoDB\", \"React\"],\n        level: \"Senior\",\n        questions: [\"What is Node.js?\"],\n        finalized: false,\n        createdAt: \"2024-03-14T15:30:00Z\",\n    },\n    {\n        id: \"4\",\n        userId: \"user1\",\n        role: \"Full Stack Developer\",\n        type: \"Mixed\",\n        techstack: [\"Node.js\", \"Express\", \"MongoDB\", \"React\"],\n        level: \"Senior\",\n        questions: [\"What is Node.js?\"],\n        finalized: false,\n        createdAt: \"2024-03-14T15:30:00Z\",\n    },\n    {\n        id: \"5\",\n        userId: \"user1\",\n        role: \"Full Stack Developer\",\n        type: \"Mixed\",\n        techstack: [\"Node.js\", \"Express\", \"MongoDB\", \"React\"],\n        level: \"Senior\",\n        questions: [\"What is Node.js?\"],\n        finalized: false,\n        createdAt: \"2024-03-14T15:30:00Z\",\n    },\n];\n\nexport const techIconBaseURL = \"https://cdn.jsdelivr.net/gh/devicons/devicon/icons\";"],"names":[],"mappings":"AAAA,8DAA8D;AAC9D,2BAA2B;AAC3B,EAAE;;;;;;;;;;;AACK,MAAM,WAAW;IACtB,YAAY;IACZ,SAAS;IACT,OAAO;IACP,WAAW;IACX,QAAQ;IACR,MAAM;IACN,UAAU;IACV,OAAO;IACP,KAAK;IACL,cAAc;IACd,WAAW;IACX,SAAS;IACT,WAAW;IACX,QAAQ;IACR,MAAM;IACN,SAAS;IACT,OAAO;IACP,UAAU;IACV,OAAO;IACP,YAAY;IACZ,QAAQ;IACR,UAAU;IACV,QAAQ;IACR,YAAY;IACZ,KAAK;IACL,OAAO;IACP,KAAK;IACL,cAAc;IACd,QAAQ;IACR,WAAW;IACX,mBAAmB;IACnB,OAAO;IACP,MAAM;IACN,MAAM;IACN,KAAK;IACL,MAAM;IACN,MAAM;IACN,MAAM;IACN,aAAa;IACb,UAAU;IACV,WAAW;IACX,QAAQ;IACR,YAAY;IACZ,IAAI;IACJ,YAAY;IACZ,IAAI;IACJ,cAAc;IACd,WAAW;IACX,SAAS;IACT,YAAY;IACZ,SAAS;IACT,OAAO;IACP,eAAe;IACf,YAAY;IACZ,UAAU;IACV,QAAQ;IACR,SAAS;IACT,YAAY;IACZ,QAAQ;IACR,SAAS;IACT,OAAO;IACP,aAAa;IACb,UAAU;IACV,QAAQ;IACR,aAAa;IACb,UAAU;IACV,KAAK;IACL,MAAM;IACN,KAAK;IACL,QAAQ;IACR,QAAQ;IACR,WAAW;IACX,OAAO;IACP,QAAQ;IACR,OAAO;IACP,MAAM;IACN,OAAO;IACP,UAAU;IACV,SAAS;IACT,MAAM;IACN,OAAO;IACP,MAAM;IACN,OAAO;IACP,MAAM;IACN,WAAW;IACX,QAAQ;IACR,MAAM;IACN,QAAQ;IACR,WAAW;IACX,YAAY;IACZ,SAAS;IACT,QAAQ;IACR,eAAe;AACjB;AA8FO,MAAM,kBAAkB;IAC7B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAEM,MAAM,kBAA+B;IAC1C;QACE,IAAI;QACJ,QAAQ;QACR,MAAM;QACN,MAAM;QACN,WAAW;YAAC;YAAS;YAAc;YAAW;SAAe;QAC7D,OAAO;QACP,WAAW;YAAC;SAAiB;QAC7B,WAAW;QACX,WAAW;IACb;IACA;QACE,IAAI;QACJ,QAAQ;QACR,MAAM;QACN,MAAM;QACN,WAAW;YAAC;YAAW;YAAW;YAAW;SAAQ;QACrD,OAAO;QACP,WAAW;YAAC;SAAmB;QAC/B,WAAW;QACX,WAAW;IACb;IACE;QACI,IAAI;QACJ,QAAQ;QACR,MAAM;QACN,MAAM;QACN,WAAW;YAAC;YAAW;YAAW;YAAW;SAAQ;QACrD,OAAO;QACP,WAAW;YAAC;SAAmB;QAC/B,WAAW;QACX,WAAW;IACf;IACA;QACI,IAAI;QACJ,QAAQ;QACR,MAAM;QACN,MAAM;QACN,WAAW;YAAC;YAAW;YAAW;YAAW;SAAQ;QACrD,OAAO;QACP,WAAW;YAAC;SAAmB;QAC/B,WAAW;QACX,WAAW;IACf;IACA;QACI,IAAI;QACJ,QAAQ;QACR,MAAM;QACN,MAAM;QACN,WAAW;YAAC;YAAW;YAAW;YAAW;SAAQ;QACrD,OAAO;QACP,WAAW;YAAC;SAAmB;QAC/B,WAAW;QACX,WAAW;IACf;CACH;AAEM,MAAM,kBAAkB","debugId":null}},
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":["file:///D:/Android%20Projects/interview-practice/lib/utils.ts"],"sourcesContent":["\"use client\";\n\nimport { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\nimport {interviewCovers, mappings, techIconBaseURL} from \"@/constants\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\nexport const getRandomInterviewCover = () => {\n    // const randomIndex = Math.floor(Math.random() * interviewCovers.length);\n    const randomIndex = 1;\n    return `/covers${interviewCovers[randomIndex]}`;\n}\n\nconst normalizeTechName = (techName: string) => {\n    const key = techName.toLowerCase().replace(/\\.js$/, \"\").replace(/\\s+/g, \"\");\n    return mappings[key as keyof typeof mappings];\n};\n\nconst checkIconExists = async (url: string) => {\n    try {\n        const response = await fetch(url, { method: \"HEAD\" });\n        return response.ok; // Returns true if the icon exists\n    } catch {\n        return false;\n    }\n};\n\nexport const getTechLogos = async (techArray: string[]) => {\n    const logoURLs = techArray.map((tech) => {\n        const normalized = normalizeTechName(tech);\n        return {\n            tech,\n            url: `${techIconBaseURL}/${normalized}/${normalized}-original.svg`,\n        };\n    });\n\n    const results = await Promise.all(\n        logoURLs.map(async ({ tech, url }) => ({\n            tech,\n            url: (await checkIconExists(url)) ? url : \"/tech.svg\",\n        }))\n    );\n\n    return results;\n};\n"],"names":[],"mappings":";;;;;;;;AAEA;AACA;AACA;AAJA;;;;AAMO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,IAAA,sKAAO,EAAC,IAAA,6IAAI,EAAC;AACtB;AAEO,MAAM,0BAA0B;IACnC,0EAA0E;IAC1E,MAAM,cAAc;IACpB,OAAO,CAAC,OAAO,EAAE,qIAAe,CAAC,YAAY,EAAE;AACnD;AAEA,MAAM,oBAAoB,CAAC;IACvB,MAAM,MAAM,SAAS,WAAW,GAAG,OAAO,CAAC,SAAS,IAAI,OAAO,CAAC,QAAQ;IACxE,OAAO,8HAAQ,CAAC,IAA6B;AACjD;AAEA,MAAM,kBAAkB,OAAO;IAC3B,IAAI;QACA,MAAM,WAAW,MAAM,MAAM,KAAK;YAAE,QAAQ;QAAO;QACnD,OAAO,SAAS,EAAE,EAAE,kCAAkC;IAC1D,EAAE,OAAM;QACJ,OAAO;IACX;AACJ;AAEO,MAAM,eAAe,OAAO;IAC/B,MAAM,WAAW,UAAU,GAAG,CAAC,CAAC;QAC5B,MAAM,aAAa,kBAAkB;QACrC,OAAO;YACH;YACA,KAAK,GAAG,qIAAe,CAAC,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,aAAa,CAAC;QACtE;IACJ;IAEA,MAAM,UAAU,MAAM,QAAQ,GAAG,CAC7B,SAAS,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,GAAK,CAAC;YACnC;YACA,KAAK,AAAC,MAAM,gBAAgB,OAAQ,MAAM;QAC9C,CAAC;IAGL,OAAO;AACX","debugId":null}},
    {"offset": {"line": 278, "column": 0}, "map": {"version":3,"sources":["file:///D:/Android%20Projects/interview-practice/components/Agent.tsx"],"sourcesContent":["import React from 'react'\r\nimport Image from \"next/image\";\r\nimport {cn} from \"@/lib/utils\";\r\n\r\nenum CallStatus {\r\n    ACTIVE = \"ACTIVE\",\r\n    INACTIVE = \"INACTIVE\",\r\n    CONECTING = \"CONECTING\",\r\n    FINISHED = \"FINISHED\",\r\n}\r\n\r\n\r\nexport const Agent = ({userName}:AgentProps) => {\r\n    const callStatus = CallStatus.INACTIVE;\r\n    const isSpeaking = true;\r\n    const borderStyle = isSpeaking ? 'border-2 border-white blue-gradient-dark' : 'dark-gradient';\r\n\r\n    return (\r\n        <div className=\"flex flex-col w-full gap-10\">\r\n            <div className=\"flex flex-row items-center justify-between w-full\">\r\n                <div className={`flex flex-col items-center justify-center gap-5 overflow-hidden h-[400px] max-sm:h-[300px] w-5/11 rounded-lg ${borderStyle}`}>\r\n                    <div className=\"flex items-center justify-center size-20 rounded-full p-5 blue-gradient relative z-10\">\r\n                        <div className=\"size-full relative rounded-full\">\r\n                            <Image src={'/ai-avatar.png'} alt={''} fill className=\"object-contain\" />\r\n                        </div>\r\n                        {isSpeaking && (\r\n                            <span className=\"absolute size-5/6 animate-ping rounded-full bg-dark-400 opacity-75\"></span>\r\n                        )}\r\n                    </div>\r\n                    <h4>AI Interviewer</h4>\r\n                </div>\r\n\r\n                <div className={`flex flex-col items-center justify-center gap-5 overflow-hidden h-[400px] max-sm:h-[300px] w-5/11 rounded-lg ${borderStyle}`}>\r\n                    <div className=\"flex items-center justify-center size-20 rounded-full p-5 blue-gradient relative z-10\">\r\n                        <div className=\"size-full relative rounded-full\">\r\n                            <Image src={'/user-avatar.png'} alt={''} fill className=\"object-cover\"/>\r\n                        </div>\r\n                        {isSpeaking && (\r\n                            <span className=\"absolute size-5/6 animate-ping rounded-full bg-dark-400 opacity-75\"></span>\r\n                        )}\r\n                    </div>\r\n                    <h4>{userName}</h4>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"flex items-center justify-center w-full dark-gradient border-2 border-dark-200 rounded-lg p-3\">\r\n                <p className=\"font-semibold\">Description Part</p>\r\n            </div>\r\n\r\n            <div className=\"flex items-center justify-center w-full\">\r\n                {callStatus !== \"ACTIVE\" ? (\r\n                    <button className=\"flex flex-row items-center justify-center rounded-3xl py-2 px-5 bg-success-200 hover:bg-success-100 gap-2 font-semibold cursor-pointer\">\r\n                        {/*<div className=\"size-5 relative\">*/}\r\n                        {/*    <Image src={'/call.svg'} alt={''} fill className=\"object-contain\"/>*/}\r\n                        {/*</div>*/}\r\n                        {/*{callStatus === \"INACTIVE\" || callStatus === \"FINISHED\" ? \"Call\" : \". . .\"}*/}\r\n                        <span\r\n                            className={cn(\r\n                                \"absolute animate-ping rounded-full opacity-75\",\r\n                                callStatus !== \"CONNECTING\" && \"hidden\"\r\n                            )}\r\n                        />\r\n\r\n                        <span className=\"relative\">\r\n                          {callStatus === \"INACTIVE\" || callStatus === \"FINISHED\"\r\n                              ? \"Call\"\r\n                              : \". . .\"}\r\n                        </span>\r\n                    </button>\r\n                ) : (\r\n                    <button className=\"flex flex-row items-center justify-center rounded-3xl py-2 px-5 bg-destructive-200 hover:bg-destructive-100 gap-2 font-semibold cursor-pointer\">\r\n                        <div className=\"size-5 relative\">\r\n                            <Image src={'/call-slash.svg'} alt={''} fill className=\"object-contain\"/>\r\n                        </div>\r\n                        Leave Interview\r\n                    </button>\r\n                )}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n"],"names":[],"mappings":";;;;;AACA;AACA;;;;AAEA,IAAA,AAAK,oCAAA;;;;;WAAA;EAAA;AAQE,MAAM,QAAQ,CAAC,EAAC,QAAQ,EAAY;IACvC,MAAM;IACN,MAAM,aAAa;IACnB,MAAM,cAAc,uCAAa,6CAA6C;IAE9E,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;wBAAI,WAAW,CAAC,6GAA6G,EAAE,aAAa;;0CACzI,8OAAC;gCAAI,WAAU;;kDACX,8OAAC;wCAAI,WAAU;kDACX,cAAA,8OAAC,wIAAK;4CAAC,KAAK;4CAAkB,KAAK;4CAAI,IAAI;4CAAC,WAAU;;;;;;;;;;;oCAEzD,4BACG,8OAAC;wCAAK,WAAU;;;;;;;;;;;;0CAGxB,8OAAC;0CAAG;;;;;;;;;;;;kCAGR,8OAAC;wBAAI,WAAW,CAAC,6GAA6G,EAAE,aAAa;;0CACzI,8OAAC;gCAAI,WAAU;;kDACX,8OAAC;wCAAI,WAAU;kDACX,cAAA,8OAAC,wIAAK;4CAAC,KAAK;4CAAoB,KAAK;4CAAI,IAAI;4CAAC,WAAU;;;;;;;;;;;oCAE3D,4BACG,8OAAC;wCAAK,WAAU;;;;;;;;;;;;0CAGxB,8OAAC;0CAAI;;;;;;;;;;;;;;;;;;0BAKb,8OAAC;gBAAI,WAAU;0BACX,cAAA,8OAAC;oBAAE,WAAU;8BAAgB;;;;;;;;;;;0BAGjC,8OAAC;gBAAI,WAAU;0BACV,qDACG,8OAAC;oBAAO,WAAU;;sCAKd,8OAAC;4BACG,WAAW,IAAA,kHAAE,EACT,iDACA,eAAe,gBAAgB;;;;;;sCAIvC,8OAAC;4BAAK,WAAU;sCACb,uCACK,SACA;;;;;;;;;;;6EAIZ;;;;;;;;;;;;AAWpB","debugId":null}},
    {"offset": {"line": 466, "column": 0}, "map": {"version":3,"sources":["file:///D:/Android%20Projects/interview-practice/app/%28root%29/interview/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React from 'react'\nimport {Agent} from \"@/components/Agent\";\nimport Image from \"next/image\";\n\n\n\nconst InterviewPage = () => {\n    return (\n        <div className=\"flex flex-col w-full gap-10\">\n            <Agent/>\n        </div>\n\n    )\n}\nexport default InterviewPage\n"],"names":[],"mappings":";;;;;AAGA;AAHA;;;AAQA,MAAM,gBAAgB;IAClB,qBACI,8OAAC;QAAI,WAAU;kBACX,cAAA,8OAAC,6HAAK;;;;;;;;;;AAIlB;uCACe","debugId":null}}]
}